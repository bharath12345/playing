securesocial {

# Global Configuration
# ~~~~~~~~~~~~~~~~~~~~

	#
	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that was received before authenticating the user
	#
	onLoginGoTo=/

	#
	# Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
	#
	onLogoutGoTo=/login

	#
	# Enable SSL
	#
	ssl=false

	#
	# The controller class for assets. This is optional, only required
	# when you use a custom class for Assets.
	#
	#assetsController=controllers.ReverseMyCustomAssetsController

	 cookie {
            #name=id
            #path=/
            #domain=some_domain
            #httpOnly=true
            #idleTimeoutInMinutes=30
            #absoluteTimeoutInMinutes=720
    }

# Provider OAuth Settings
# ~~~~~~~~~~~~~~~~~~~~~~
# Deliberately NO Username Passsword Provider or authentication - relying solely on external sources

    twitter {
    	requestTokenUrl="https://api.twitter.com/oauth/request_token"
    	accessTokenUrl="https://api.twitter.com/oauth/access_token"
    	authorizationUrl="https://api.twitter.com/oauth/authorize"
    	consumerKey=${TWITTER_CONSUMER_KEY}
        consumerSecret=${TWITTER_CONSUMER_SECRET}
    }

    facebook {
    	authorizationUrl="https://graph.facebook.com/oauth/authorize"
    	accessTokenUrl="https://graph.facebook.com/oauth/access_token"
    	# this scope is the minimum SecureSocial requires.  You can add more if required by your app.
    	scope=email
    	clientId=${FACEBOOK_CLIENT_ID}
        clientSecret=${FACEBOOK_CLIENT_SECRET}
    }

    google {
    	authorizationUrl="https://accounts.google.com/o/oauth2/auth"
    	accessTokenUrl="https://accounts.google.com/o/oauth2/token"
    	scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    	clientId=${GOOGLE_CLIENT_ID}
        clientSecret=${GOOGLE_CLIENT_SECRET}
    }

    linkedin {
    	requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
    	accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
    	authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
    	consumerKey=${LINKEDIN_CONSUMER_KEY}
        consumerSecret=${LINKEDIN_CONSUMER_SECRET}
    }

    github {
    	authorizationUrl="https://github.com/login/oauth/authorize"
    	accessTokenUrl="https://github.com/login/oauth/access_token"
    	clientId=${GITHUB_CLIENT_ID}
        clientSecret=${GITHUB_CLIENT_SECRET}
    }

}

# securesocial.bootstrapCssPath
# securesocial.faviconPath
# securesocial.jqueryPath
# securesocial.customCssPath